datasource db {
  provider          = "sqlserver"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Ticket {
  id                Int                 @id
  createdAt         DateTime
  subject           String
  description       String              @db.VarChar(max)
  descriptionVector DescriptionVector[]
  status            String
  tags              Tag[]
  Deviation         Deviation?          @relation(fields: [deviationId], references: [id])
  deviationId       Int?
}

model DescriptionVector {
  id          Int    @id @default(autoincrement())
  ticketId    Int
  vectorValue String
  ticket      Ticket @relation(fields: [ticketId], references: [id])

  @@unique([ticketId, id])
}

model Tag {
  id       Int    @id @default(autoincrement())
  name     String
  ticketId Int
  ticket   Ticket @relation(fields: [ticketId], references: [id])
}

model Deviation {
  id          Int      @id @default(autoincrement())
  creator     String // External system reference
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tickets     Ticket[]
  category    String
  title       String
  description String   @db.VarChar(max)
  status      String
  assigneeId  String? // External system reference
  solution    String?
  isSolved    Boolean  @default(false)
  solvedBy    String? // External system reference
  progress    Int
  priority    String
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?
}

model User {
  id        String      @id // External system reference
  name      String
  Deviation Deviation[]
  isActive  Boolean
}
